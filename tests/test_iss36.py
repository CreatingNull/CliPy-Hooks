import os
import shutil
import subprocess as sp
import tempfile

import pytest

import tests.test_utils as utils


CMAKELISTS = """\
project(ct_test C)

set(CMAKE_C_STANDARD 99)
set(CMAKE_C_STANDARD_REQUIRED True)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
add_executable(${PROJECT_NAME} src/ok.c)
list(APPEND FLAGS_DEBUG -g3)

target_compile_options(${PROJECT_NAME} PUBLIC "$<$<CONFIG:DEBUG>:${FLAGS_DEBUG}>")
set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME output)
"""


class TestIss36:
    @classmethod
    def setup_class(cls):
        cls.test_dir = os.path.join(tempfile.gettempdir(), "pre-commit-hooks-testing")
        cls.scenarios = [
            [
                "Integration test for issue 36",
                {
                    "expd_output": b"clang-tidy...............................................................Passed\n",
                    "expd_retcode": 0,
                },
            ]
        ]

    def test_run(cls, expd_output, expd_retcode):
        """ See issue 36, tests cmake"""
        os.makedirs(os.path.join(cls.test_dir, "src"), exist_ok=True)
        with open(os.path.join(cls.test_dir, "src", "ok.c"), "w") as f:
            f.write(utils.test_file_strs["ok.c"])
        with open(os.path.join(cls.test_dir, "CMakeLists.txt"), "w") as f:
            f.write(CMAKELISTS)
        child = sp.run(
            ["cmake", "-DCMAKE_EXPORT_COMPILE_COMMANDS=ON", "-Wno-dev", cls.test_dir],
            cwd=cls.test_dir,
            stdout=sp.PIPE,
            stderr=sp.PIPE,
        )
        if len(child.stderr) != 0 or child.returncode != 0:
            pytest.fail("Problem occurred when testing iss36:" + child.stderr.decode())
        output, retcode = utils.integration_test(
            "clang-tidy",
            [os.path.join(cls.test_dir, "src", "ok.c")],
            ["--fix", "--quiet", "-p=cmake-build-debug"],
            cls.test_dir,
        )
        utils.assert_equal(expd_output, output)
        assert expd_retcode == retcode

    @classmethod
    def teardown_class(cls):
        # Delete cmake files generated by issue 36 integration test
        makefile = os.path.join(cls.test_dir, "Makefile")
        cmakecache = os.path.join(cls.test_dir, "CMakeCache.txt")
        cmakefiles = os.path.join(cls.test_dir, "CMakeFiles")
        compile_commands = os.path.join(cls.test_dir, "compile_commands.json")
        cmake_install = os.path.join(cls.test_dir, "cmake_install.cmake")
        generated_files = [makefile, cmakecache, compile_commands, cmake_install]
        for f in generated_files:
            if os.path.exists(f):
                os.remove(f)
        if os.path.exists(cmakefiles):
            shutil.rmtree(cmakefiles)
